# 路径配置为：/Users/lyn/Applications/miniforge3
curl -L -O "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh"
bash Miniforge3-$(uname)-$(uname -m).sh

brew install cmake

brew install zstd

# make sure to start with a fresh environment
conda env remove -n mlc_llm_install

# create the conda environment with build dependency
conda create -n mlc_llm_install -c conda-forge \
    "llvmdev>=15" \
    "cmake>=3.24" \
    git \
    python=3.11

# enter the build environment
conda activate mlc_llm_install

cd /Users/lyn/Documents/python/learn/mlc_llm/modules

# clone from GitHub
git clone --recursive https://github.com/mlc-ai/relax.git tvm-unity && cd tvm-unity

# create the build directory
rm -rf build && mkdir build && cd build

# specify build requirements in `config.cmake`
cp ../cmake/config.cmake .

# controls default compilation flags
echo "set(CMAKE_BUILD_TYPE RelWithDebInfo)" >> config.cmake

# LLVM is a must dependency
echo "set(USE_LLVM \"llvm-config --ignore-libllvm --link-static\")" >> config.cmake
# echo "set(USE_LLVM \"llvm-config\")" >> config.cmake
echo "set(HIDE_PRIVATE_SYMBOLS ON)" >> config.cmake

# GPU SDKs, turn on if needed
echo "set(USE_CUDA   OFF)" >> config.cmake
echo "set(USE_METAL  ON)" >> config.cmake
echo "set(USE_VULKAN OFF)" >> config.cmake
echo "set(USE_OPENCL OFF)" >> config.cmake

# FlashInfer related, requires CUDA w/ compute capability 80;86;89;90
echo "set(USE_FLASHINFER OFF)" >> config.cmake

# Build libtvm using cmake and cmake
cmake .. && cmake --build . --parallel $(nproc)

conda create -n mlc_llm_dev python=3.11

conda activate mlc_llm_dev

cd /Users/lyn/Documents/python/learn/mlc_llm/modules/tvm-unity/python

python -m pip install -i https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple -e .
